/*******************************************************************************************
  INFORMATION
*******************************************************************************************/

/*
Dealer Name: Control Concepts, Inc.
System Name: AVPro Edge MXNet SerialPort v1.2
Programmer:  VNG
Version:     1.2
*/

/*******************************************************************************************
  COMPILER DIRECTIVES
*******************************************************************************************/

#SYMBOL_NAME "AVPro Edge MXNet SerialPort v1.2"
#CATEGORY "0"
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

// #ENABLE_DYNAMIC
// #HINT ""
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM

/*******************************************************************************************
  CONSTANTS
*******************************************************************************************/

#DEFINE_CONSTANT TRUE 1
#DEFINE_CONSTANT FALSE 0
#DEFINE_CONSTANT MAX_STRING 100
#DEFINE_CONSTANT MAX_BUFFER 65534
#DEFINE_CONSTANT MAX_COMMANDS 10
#DEFINE_CONSTANT NULL_STRING ""
#DEFINE_CONSTANT NULL_VALUE 0

#HELP_BEGIN
To be used with AVPro Edge MXNet SerialPort v1.2.umc module only.
Not to be used as a stand-alone module.
#HELP_END

/*******************************************************************************************
  INCLUDE LIBRARIES
*******************************************************************************************/

#USER_SIMPLSHARP_LIBRARY "AVProEdgeMXNetLib"

/*******************************************************************************************
  MODULE I/O
*******************************************************************************************/

// --------------------- INPUTS

DIGITAL_INPUT _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_,
			  _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_,
          	  Rs232Send, 
          	  CommandSend[MAX_COMMANDS];

STRING_INPUT  MyCrestronCommSpec[MAX_STRING];

STRING_INPUT  Rs232Tx[MAX_BUFFER];

// --------------------- OUTPUTS

DIGITAL_OUTPUT _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_,
			   _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, _SKIP_, 
          	   IsInitialized;
				
STRING_OUTPUT  Rs232Rx;
				
/*******************************************************************************************
  PARAMETERS
*******************************************************************************************/

INTEGER_PARAMETER CommandProcessorID;
INTEGER_PARAMETER DeviceType;
INTEGER_PARAMETER MatrixIndex;
INTEGER_PARAMETER Baud_Rate;
INTEGER_PARAMETER Data_Bits;
INTEGER_PARAMETER Stop_Bits;
INTEGER_PARAMETER Data_Parity;
STRING_PARAMETER CommandString[MAX_COMMANDS][MAX_STRING];

/*******************************************************************************************
  PARAMETER PROPERTIES
*******************************************************************************************/

/*******************************************************************************************
  GLOBAL VARIABLES
*******************************************************************************************/

// --------------------- SIMPL# Classes

SerialPortComponent serialPort;   

INTEGER Ready;
/*******************************************************************************************
  FUNCTIONS
*******************************************************************************************/

// --------------------- RESET
          
FUNCTION ResetOutputs()
{
  // -- DIGITALS

  IsInitialized = FALSE;

  // -- SERIALS

  Rs232Rx = NULL_STRING;
}

// --------------------- SIMPL# EVENT HANDLERS

EVENTHANDLER OnInitialize (SerialPortComponent sender, DigEventArgs args)
{
  IsInitialized = args.Payload;
  Ready = args.Payload;
}

EVENTHANDLER OnRX (SerialPortComponent sender, SerEventArgs args)
{
  Rs232Rx = args.Payload;
}

/*******************************************************************************************
  EVENT HANDLERS
*******************************************************************************************/

// --------------------- COMM SPEC  

THREADSAFE CHANGE MyCrestronCommSpec 
{
  serialPort.SetCrestronCommSpec(MyCrestronCommSpec);
}

// --------------------- RS232 TX

THREADSAFE PUSH Rs232Send
{
  if(Ready = 1)
  {
  	serialPort.SendCommand(Rs232Tx);
  }
}

// --------------------- COMMANDS

THREADSAFE PUSH CommandSend
{
  INTEGER index;
  index = GETLASTMODIFIEDARRAYINDEX();

  IF (Ready = 1 && index > 0 && index <= MAX_COMMANDS && CommandString[index] != NULL_STRING)
	serialPort.SendCommand(CommandString[index]);  
}

/*******************************************************************************************
  MAIN
*******************************************************************************************/

FUNCTION Main()
{
  Ready = 0;
  WAITFORINITIALIZATIONCOMPLETE();
		
  ResetOutputs();
	
  REGISTEREVENT(serialPort, OnInitialize, OnInitialize);
  REGISTEREVENT(serialPort, OnRX, OnRX);
	
  serialPort.Configure(CommandProcessorID, DeviceType, MatrixIndex, Baud_Rate, Data_Bits, Stop_Bits, Data_Parity);
}
