/*******************************************************************************************
  SIMPL+ Module Information
*******************************************************************************************/
/*
Dealer Name:	ControlWorks Consulting, LLC
Programmer:		lincoln@controlworks.com 
Comments:		Copyright (C) 2023 ControlWorks Consulting, LLC 
				All rights reserved - use subject to license
*/

/*******************************************************************************************
  Compiler Directives
*******************************************************************************************/
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
*******************************************************************************************/
ANALOG_INPUT timeIn;
STRING_OUTPUT formattedTimeFb$;


/*******************************************************************************************
  Event Handlers
*******************************************************************************************/
CHANGE timeIn { 
	IF (timeIn = 0) 
		formattedTimeFb$ = "12:00 M";  
	ELSE IF (timeIn = 720) 
		formattedTimeFb$ = "12:00 N"; 
	ELSE IF (timeIn < 60)
		MAKESTRING(formattedTimeFb$, "%u:%02u AM", (timeIn+720)/60, timeIn % 60); 
	ELSE IF (timeIn < 720)
		MAKESTRING(formattedTimeFb$, "%u:%02u AM", timeIn/60, timeIn % 60); 
	ELSE IF (timeIn < 780)
		MAKESTRING(formattedTimeFb$, "%u:%02u PM", (timeIn)/60, (timeIn) % 60); 
	ELSE 
		MAKESTRING(formattedTimeFb$, "%u:%02u PM", (timeIn-720)/60, (timeIn-720) % 60); 
}


/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/
/*
Function Main()
{
    // TODO:  Add code here
    // Initialize declared global and local variables/arrays as needed.

    // WaitForInitializationComplete();
    // If you are reading any Input or Output variables, uncomment
    //   the WaitForInitializationComplete statement above and read
    //   them afterwards.  Input/Output variables will not have
    //   their correct values set until after the logic processor
    //   runs and propagates the values to them.
}
*/

